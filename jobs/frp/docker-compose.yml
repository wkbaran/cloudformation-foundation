services:
  frps:
    image: snowdreamtech/frps:0.61.2
    container_name: frps
    restart: always
    volumes:
      - /home/ec2-user/frp/frps.toml:/etc/frp/frps.toml
      - /home/ec2-user/frp/certs:/certs:ro
      - /home/ec2-user/frp/generate_certs.sh:/generate_certs.sh
    expose:
      - "7000"    # Control port
      # - "7500"  # Dashboard
      #- "80"     # HTTP vhost
      #- "443"    # HTTPS vhost
    ports:
      - "7000:7000"            # Control port (TCP)
      - "7000:7000/udp"        # Control port (UDP/KCP)
      - "5000-5100:5000-5100"  # Range for TCP tunnels
    networks:
      - main
    labels:
      - "traefik.enable=true"
#      - "traefik.http.routers.frp-admin.rule=Host(`frp.${DOMAIN}`)"
#      - "traefik.http.routers.frp-admin.entrypoints=websecure"
#      - "traefik.http.routers.frp-admin.tls=true"
#      - "traefik.http.routers.frp-admin.tls.certresolver=myresolver"
#      - "traefik.http.services.frp-admin.loadbalancer.server.port=7500"

      # Router for webhook paths only
      - "traefik.http.routers.frp-webhook.rule=Host(`frp.${DOMAIN}`) && PathPrefix(`/webhook`)"
      - "traefik.http.routers.frp-webhook.entrypoints=websecure"
      - "traefik.http.routers.frp-webhook.tls=true"
      - "traefik.http.routers.frp-webhook.tls.certresolver=myresolver"
      - "traefik.http.services.frp-webhook.loadbalancer.server.port=8080"
      
      # Router for blocking all other paths on the frp subdomain
      - "traefik.http.routers.frp-block.rule=Host(`frp.${DOMAIN}`)"
      - "traefik.http.routers.frp-block.entrypoints=websecure"
      - "traefik.http.routers.frp-block.tls=true"
      - "traefik.http.routers.frp-block.tls.certresolver=myresolver"
      - "traefik.http.middlewares.block-non-webhook.errors.status=403" 
      - "traefik.http.middlewares.block-non-webhook.errors.service=noop@internal"
      - "traefik.http.middlewares.block-non-webhook.errors.query=Access Denied: Path Not Allowed"
      - "traefik.http.routers.frp-block.middlewares=block-non-webhook"
      - "traefik.http.routers.frp-block.service=noop@internal"
      
      # Handling HTTP to HTTPS redirect
      - "traefik.http.routers.frp-http.rule=Host(`frp.${DOMAIN}`) || HostRegexp(`{subdomain:[a-z0-9-]+}.frp.${DOMAIN}`)"
      - "traefik.http.routers.frp-http.entrypoints=web"
      - "traefik.http.routers.frp-http.middlewares=redirect-to-https"

      # Headers for proper proxy behavior
      - "traefik.http.middlewares.frp-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.frp-headers.headers.customRequestHeaders.X-Forwarded-Host=frp.${DOMAIN}"
      - "traefik.http.routers.frp.middlewares=frp-headers"

networks:
  main:
    external: true
